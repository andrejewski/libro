// Generated by CoffeeScript 1.6.3
/*
	CAKeyCompressor
	Signature: Object{full: short} -> Function
	Description: Especially with persistent storage of JSON, object keys
	may take up more space than their values and longer key names certainly
	will effect a large DB of objects. This Function shorts or lengthens
	keys for use or storage situations.
	Dependenies: none
	Exports: CAKeyCompressor[Function]
*/


(function() {
  var CAKeyCompressor, exports;

  CAKeyCompressor = function(map) {
    var key, longShort, shortLong, value, _i, _len;
    if (map == null) {
      map = {};
    }
    longShort = map;
    shortLong = {};
    for (value = _i = 0, _len = longShort.length; _i < _len; value = ++_i) {
      key = longShort[value];
      shortLong[value] = key;
    }
    return function(obj, conversion) {
      var model, ret, _j, _len1;
      if (conversion == null) {
        conversion = 'short';
      }
      ret = model = {};
      if ('short' === conversion) {
        model = longShort;
      } else {
        model = shortLong;
      }
      for (value = _j = 0, _len1 = obj.length; _j < _len1; value = ++_j) {
        key = obj[value];
        ret[model[key]] = value;
      }
      return ret;
    };
  };

  if (typeof exports !== 'undefined') {
    exports = CAKeyCompressor;
  } else {
    this.CAKeyCompressor = CAKeyCompressor;
  }

}).call(this);
